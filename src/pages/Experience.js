import { Link } from "react-router-dom";
import { useEffect, useState } from "react";
import { useLanguage } from "../contexts/LanguageContext";
import { FaArrowLeft } from "react-icons/fa";

export default function Experience() {
  const { lang } = useLanguage();
  const [selectedImage, setSelectedImage] = useState(null); // üü¢ state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö modal

  const translations = {
    en: {
      pageTitle: "Experience",
      back: "",
      view: "View",
      example: "Example",
    },
    th: {
      pageTitle: "‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå",
      back: "",
      view: "‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î",
      example: "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á",
    },
  };

  const experiences = [
    {
      title: "IoT Development",
      projects: [
        {
          name: "IoT Motion Detection System",
          description: {
            en: "Developed an IoT-based motion detection system using ESP32, PIR sensor, and buzzer. The system connects to Wi-Fi and integrates with Google Sheets via HTTP, while also using MQTT (NETPIE) for real-time remote control of the PIR sensor. Motion events trigger alarms, are logged automatically, and displayed on a real-time dashboard.",
            th: "‡∏û‡∏±‡∏í‡∏ô‡∏≤ IoT Motion Detection System ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ ESP32, ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå PIR ‡πÅ‡∏•‡∏∞ buzzer ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Wi-Fi ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Google Sheets ‡∏ú‡πà‡∏≤‡∏ô HTTP ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏±‡πâ‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö MQTT (NETPIE) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° PIR sensor ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏à‡∏∞‡∏ó‡∏£‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ö‡∏ô‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå",
          },
          images: [
            "/asset/‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ (1098).png",
            "/asset/‡∏†‡∏≤‡∏û‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ (1100).png",
            "/asset/image.png",
            "/asset/545668582_783186558014095_8675325045153080937_n.jpg",
            "/asset/547997274_1523467555757486_6212435790267256435_n.jpg",
            "/asset/548703398_776337918625598_7259626310134853920_n.jpg",
          ],
          github:
            "https://drive.google.com/drive/folders/1EHC55KaQWt7r75oi0H3ykCVhm55eI_OO?usp=drive_link",
        },
        {
          name: "Wokwi Simulation Examples",
          description: {
            en: "These are example IoT simulations created with Wokwi. They demonstrate different ESP32 and sensor-based projects as references.",
            th: "‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á IoT ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Wokwi ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á ESP32 ‡πÅ‡∏•‡∏∞‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÉ‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ô‡∏ß‡∏ó‡∏≤‡∏á",
          },
          wokwi: [
            "https://wokwi.com/projects/419869362716701697",
            "https://wokwi.com/projects/419898221788271617",
            "https://wokwi.com/projects/417634124736159745",
            "https://wokwi.com/projects/421477674708909057",
          ],
        },
      ],
    },
    {
      title: "Web Application Development",
      projects: [
        {
          name: "E-commerce App",
          description: {
            en: "Developed a full-stack e-commerce app for general merchandise featuring product CRUD, Google OAuth2 login, JWT-based authentication, Stripe payment, image upload with Cloudinary, and an admin dashboard built with React, Node.js, Express, and Prisma.",
            th: "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏≠‡∏õ E-commerce ‡πÅ‡∏ö‡∏ö full-stack ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö CRUD ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Google OAuth2, Authentication ‡∏î‡πâ‡∏ß‡∏¢ JWT, ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô Stripe, ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏î‡πâ‡∏ß‡∏¢ Cloudinary ‡πÅ‡∏•‡∏∞‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢ React, Node.js, Express ‡πÅ‡∏•‡∏∞ Prisma",
          },
          github: "https://github.com/Oattha/ecom-oat-main-main2.git",
        },
        {
          name: "Employee Check-in/Out App",
          description: {
            en: "Developed a containerized full-stack employee check-in/out web application using Node.js, PHP, and HTML, featuring RESTful APIs, Docker orchestration, and a dedicated admin dashboard.",
            th: "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏≠‡∏õ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤-‡∏≠‡∏≠‡∏Å‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ‡πÉ‡∏ä‡πâ Node.js, PHP ‡πÅ‡∏•‡∏∞ HTML ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö full-stack ‡∏û‡∏£‡πâ‡∏≠‡∏° RESTful API, ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ container ‡∏î‡πâ‡∏ß‡∏¢ Docker ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö",
          },
          github: "https://github.com/Oattha/employee-check-in-out.git",
        },
        {
          name: "KuShop E-commerce Web App",
          description: {
            en: "Developed a modern e-commerce web application using Next.js, TypeScript, and Tailwind CSS. Features include product listings, product detail pages, shopping cart functionality, and responsive UI design optimized for performance and scalability.",
            th: "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏ß‡πá‡∏ö E-commerce ‡∏™‡∏°‡∏±‡∏¢‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Next.js, TypeScript ‡πÅ‡∏•‡∏∞ Tailwind CSS ‡∏°‡∏µ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏´‡∏ô‡πâ‡∏≤‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡πÅ‡∏•‡∏∞ UI ‡∏ó‡∏µ‡πà responsive ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å",
          },
          github: "https://github.com/Oattha/4-8-kushop-main.git",
        },
        {
          name: "Customer/Product API",
          description: {
            en: "Developed RESTful APIs for managing customers and products using Node.js, Express, and Prisma ORM, implementing full CRUD operations with proper error handling and data validation.",
            th: "‡∏û‡∏±‡∏í‡∏ô‡∏≤ RESTful API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Node.js, Express ‡πÅ‡∏•‡∏∞ Prisma ORM ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö CRUD ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error",
          },
          github: "https://github.com/Oattha/full_project.git",
        },
      ],
    },
    {
      title: "Application Development",
      projects: [
        {
          name: "Book Tracking App",
          description: {
            en: "Developed a cross-platform mobile book tracking app using Flutter and Dart, featuring Firebase Authentication, external API integration for book data, user login system, and persistent storage using Cloud Firestore.",
            th: "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÅ‡∏≠‡∏õ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Flutter ‡πÅ‡∏•‡∏∞ Dart ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏° ‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Firebase Authentication ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏à‡∏≤‡∏Å API ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏≤‡∏ß‡∏£‡∏î‡πâ‡∏ß‡∏¢ Cloud Firestore",
          },
          github: "https://github.com/Oattha/book_tracker1.git",
        },
      ],
    },
    {
      title: "Game Development",
      projects: [
        {
          name: "Oat Survival",
          description: {
            en: "Developed using Unity with C#, building core game mechanics such as the quest system, character movement, enemy AI, and collision detection.",
            th: "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏Å‡∏°‡∏î‡πâ‡∏ß‡∏¢ Unity ‡πÅ‡∏•‡∏∞ C# ‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏° ‡πÄ‡∏ä‡πà‡∏ô ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Ñ‡∏ß‡∏™ ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ AI ‡∏®‡∏±‡∏ï‡∏£‡∏π ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏ô",
          },
          github:
            "https://drive.google.com/drive/folders/1gi2PMVauMDvkt_g8BukN6YEjOTpicta6?usp=sharing",
        },
      ],
    },
    {
      title: "UX / UI Design",
      projects: [
        {
          name: "E-commerce Web App (Oat Ecom)",
          description: {
            en: "Designed UI/UX in Figma for a full e-commerce web application.",
            th: "‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö UI/UX ‡∏î‡πâ‡∏ß‡∏¢ Figma ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡πá‡∏ö E-commerce ‡∏Ñ‡∏£‡∏ö‡∏ß‡∏á‡∏à‡∏£",
          },
          github:
            "https://www.figma.com/design/hvtDr27giToYrtazdlRcfr/22-%E0%B8%AD%E0%B8%A3%E0%B8%A3%E0%B8%96%E0%B8%9E%E0%B8%A5_%E0%B8%84%E0%B8%B3%E0%B8%9E%E0%B8%A5-work2?node-id=1-32&t=xYB7dfI93znIoFOj-1",
        },
      ],
    },
  ];

  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  return (
    <div className="bg-white dark:bg-black min-h-screen text-black dark:text-white p-6 relative transition-colors">
      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
      <Link
        to="/"
        className="absolute top-6 left-6 bg-green-400 hover:bg-green-500 
             text-black px-3 py-1 rounded-full font-semibold text-sm 
             flex items-center gap-2 transition-all shadow-md"
      >
        <FaArrowLeft className="text-base" />
        {translations[lang].back}
      </Link>


      <h1 className="text-4xl font-bold mb-6 text-center">
        {translations[lang].pageTitle}
      </h1>

      <div className="space-y-10">
        {experiences.map((category, idx) => (
          <div key={idx}>
            <h2 className="text-2xl font-bold text-green-500 dark:text-green-400 mb-4">
              {category.title}
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {category.projects.map((project, i) => (
                <div
                  key={i}
                  className="bg-gray-100 dark:bg-gray-800 p-4 rounded-lg shadow-lg flex flex-col justify-between transition-colors"
                >
                  <div>
                    <h3 className="text-xl font-semibold mb-2">
                      {project.name}
                    </h3>

                    {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
                    {project.images && (
                      <div className="mb-4">
                        <div className="grid grid-cols-3 gap-3">
                          {project.images.map((img, index) => (
                            <img
                              key={index}
                              src={img}
                              alt={`${project.name} ${index + 1}`}
                              className="w-full h-28 object-cover rounded-lg shadow-md hover:scale-105 transition-transform cursor-pointer"
                              onClick={() => setSelectedImage(img)}
                            />
                          ))}
                        </div>
                      </div>
                    )}

                    <p className="text-gray-700 dark:text-gray-300 text-sm mb-3">
                      {project.description[lang]}
                    </p>

                    {/* Wokwi Links */}
                    {project.wokwi && (
                      <div className="flex flex-col gap-2 mb-3">
                        {project.wokwi.map((link, idx) => (
                          <a
                            key={idx}
                            href={link}
                            target="_blank"
                            rel="noopener noreferrer"
                            className="bg-blue-400 hover:bg-blue-500 text-black px-3 py-1 rounded-full font-semibold text-sm transition-all text-center"
                          >
                            {translations[lang].example} {idx + 1}
                          </a>
                        ))}
                      </div>
                    )}
                  </div>

                  {/* GitHub / Drive / Figma Link */}
                  {project.github && (
                    <a
                      href={project.github}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="mt-4 inline-block bg-green-400 hover:bg-green-500 text-black px-3 py-1 rounded-full font-semibold text-sm transition-all text-center"
                    >
                      {translations[lang].view}
                    </a>
                  )}
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>

      {/* Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π‡∏£‡∏π‡∏õ‡πÄ‡∏ï‡πá‡∏° */}
      {selectedImage && (
        <div
          className="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50"
          onClick={() => setSelectedImage(null)}
        >
          <img
            src={selectedImage}
            alt="Full View"
            className="max-h-[90%] max-w-[90%] rounded-lg shadow-lg"
          />
        </div>
      )}
    </div>
  );
}